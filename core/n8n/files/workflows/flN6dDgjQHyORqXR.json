{"createdAt":"2025-06-18T14:50:18.901Z","updatedAt":"2025-06-18T18:05:59.592Z","id":"flN6dDgjQHyORqXR","name":"api/v1/tests/databases/credentials","active":true,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"api/v1/tests/databases/credentials","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-360,100],"id":"6a936791-4e1c-414b-9076-ab529780cb3b","name":"Webhook","webhookId":"a2b19b60-8667-4222-a649-46aceed690c6"},{"parameters":{"content":"# Parse et validation des credentials testées\n\nNote: Pour atteindre ce workflow on a envoyé une\n- POST request\n- url: api/v1/tests/databases/credentials (Donc on sait qu'on teste des credentials)\n- body: Un json avec les keys:\n--> database_name\n--> database_test_name\n\ndatabase_test_name qui n'est pas utilisée. On aurait pu par exemple utiliser une url plus générale api/v1/tests/databases/ et ensuite utiliser un router: \n---  Si database_test_name == credentials \n---  Si database_test_name == autres\n","height":700,"width":460,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-400,-320],"id":"baf61d46-d73f-424b-bd9c-e5f86fdf8c6f","name":"Sticky Note"},{"parameters":{"operation":"executeQuery","query":"SELECT * FROM public.\"user\"\nORDER BY id ASC ","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[640,-60],"id":"6270245e-0086-4d3a-8aea-ae6d58a43d08","name":"Execute a SQL query","credentials":{"postgres":{"id":"u3TMm2mvaM7hIJw7","name":"postgres_user"}},"onError":"continueErrorOutput"},{"parameters":{"content":"# Tests logic\n\n## Ici on définit les tests et sa réponse\n\n### postgres\n- Allez regarder dans pgadmin les tableaux disponibles. - Ou faites rapidement une requête sql déclenché avec un manual trigger pour fetcher tous les tableaux disponibles\n- Ici je propose de valider qu'il n'y a qu'un seul utilisateur de l'instance","height":700,"width":860,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[380,-320],"id":"b9ad37f5-bfe3-432a-8115-c467ac04c659","name":"Sticky Note1"},{"parameters":{"content":"## On route selon le type de credentials testées\n\n1. postgres\n2. supabase\n3. error","height":700,"width":280,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[80,-320],"id":"8da91c33-fe73-4ddc-84f3-6afbb7aef8cd","name":"Sticky Note2"},{"parameters":{"assignments":{"assignments":[{"id":"8d911660-f92a-4a3f-a910-6d8736a8c45d","name":"credential_name","value":"={{ $json.body.credential_name }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-140,100],"id":"998464e7-f7c9-41b6-bd26-76e5660ed137","name":"parse_credential_name"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.credential_name }}","rightValue":"postgres","operator":{"type":"string","operation":"equals"},"id":"5e016c4a-2b05-4589-9f45-5c5c2f0fe1b8"}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"f6c02d3c-9e5c-40fe-909b-b783dbcd007e","leftValue":"={{ $json.credential_name }}","rightValue":"supabase","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}}]},"options":{"fallbackOutput":"extra"}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[160,100],"id":"18299b7d-04ce-41cd-9940-d30a8cc2ecfe","name":"Switch"},{"parameters":{"respondWith":"json","responseBody":"{\n  \"test_status\": \"success\"\n}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[1100,-80],"id":"99d600ba-1551-4aa6-abe6-4aba37cd502c","name":"PostgresSuccess"},{"parameters":{"respondWith":"json","responseBody":"={\n  \"test_status\": \"error\",\n  \"error_message\": \"{{$json.error}}\"\n}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[1100,240],"id":"b01b56ad-14d0-4ca4-a316-e838cff5c10c","name":"PostgresFail"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"4681e0b1-345b-434e-b644-7e635d5c8935","leftValue":"={{ $json.email }}","rightValue":"={{ $('PostgresEmailToFind').item.json.email_to_be_found }}","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[880,-80],"id":"e7abe8e5-c2d6-4406-9e0f-c0d761a5ccbb","name":"If"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[1360,40],"id":"108079cd-d79a-4d58-8a1d-f70b81b3e5b4","name":"No Operation, do nothing"},{"parameters":{"respondWith":"json","responseBody":"={\n  \"test_status\": \"error\",\n  \"error_message\": \"The user email found doesn't match the requirements. Found{{ $json.email }}\"\n}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[1100,60],"id":"cfd52b59-424d-4a0c-ba99-e8da42cb50e6","name":"PostgresSuccess1"},{"parameters":{"assignments":{"assignments":[{"id":"4e46c7ac-29ac-4ed3-b6bd-8c397569c21f","name":"email_to_be_found","value":"emmanuel.barriol@gmail.com","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[440,-60],"id":"b78edffc-9389-4bed-99a8-ed8709a9a775","name":"PostgresEmailToFind"}],"connections":{"Webhook":{"main":[[{"node":"parse_credential_name","type":"main","index":0}]]},"Execute a SQL query":{"main":[[{"node":"If","type":"main","index":0}],[{"node":"PostgresFail","type":"main","index":0}]]},"parse_credential_name":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Switch":{"main":[[{"node":"PostgresEmailToFind","type":"main","index":0}]]},"PostgresFail":{"main":[[{"node":"No Operation, do nothing","type":"main","index":0}]]},"If":{"main":[[{"node":"PostgresSuccess","type":"main","index":0}],[{"node":"PostgresSuccess1","type":"main","index":0}]]},"PostgresEmailToFind":{"main":[[{"node":"Execute a SQL query","type":"main","index":0}]]},"PostgresSuccess1":{"main":[[{"node":"No Operation, do nothing","type":"main","index":0}]]},"PostgresSuccess":{"main":[[{"node":"No Operation, do nothing","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook":[{"json":{"headers":{"accept":"application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7","content-type":"application/json","user-agent":"axios/1.8.3","content-length":"65","accept-encoding":"gzip, compress, deflate, br","host":"localhost:5677","connection":"close"},"params":{},"query":{},"body":{"database_test_name":"credentials","credential_name":"postgres"},"webhookUrl":"http://localhost:5677/webhook/api/v1/tests/databases","executionMode":"production"}}]},"versionId":"e0889a28-0e8b-4df4-9af4-928db5adac7a","triggerCount":1,"tags":[]}