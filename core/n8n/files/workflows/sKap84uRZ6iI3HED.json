{"createdAt":"2025-07-14T09:30:37.139Z","updatedAt":"2025-07-14T15:55:50.843Z","id":"sKap84uRZ6iI3HED","name":"credentials&database_01","active":false,"isArchived":false,"nodes":[{"parameters":{"content":"## Consignes\n\nL'objectif est de se connecter à la database postgresql en créant les credentials postgres dans n8n. Ensuite, on effectuera une reqête SQL pour créer une table et ajouter les données financières que l'on a construites jusqu'ici.\n\n1. Créer les credentials postgresql dans n8n\n2. Créer une table \"daily_time_series\" qui pourra accepter nos données flaten que l'on a sauvegarder en csv.\nNote: Vous pouvez préalabalement checker si la table existe pour rediriger le workflow vers une requête de création de table ou non.\n3. Ouvrez ce workflow en tant que sub-workflow qui sera appelé par le validation workflow. Il prendre en input l'asset_ticker, et devra déclencher l'importation du csv et l'ajout des données dans la postgres sql","height":420,"width":640,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-200,-200],"id":"120c250d-a070-4b3a-a079-17076df9760a","name":"Sticky Note"},{"parameters":{"content":"## Astuces\n\n- Le host de la database est le nom du service docker\n- Pensez à définir l'unicité d'une ligne pour éviter les doublons\n- Pour créer un table il faut exécuter une requête, ensuite, le noeud postgres vous propose différentes méthodes\n- Pensez à regarder votre pg_admin panel our voir ce qu'il se passe dans votre database\n- Exemple de requête pour vérifier l'existence\n```jsonSELECT EXISTS (\n    SELECT FROM information_schema.tables\n    WHERE  table_schema = 'public'      -- change if you use another schema\n       AND table_name   = 'prices_raw'  -- ← name of the table to test\n)  AS table_exists;\n```\n- Vous verez que les noeuds postgresql comprennent les valeurs utilisées pour les primarey key et vous permettent de les sélectionner pour \"upsert\"","height":420,"width":840,"color":3},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[440,-200],"id":"495513a3-4061-45e2-872c-d971c3b126f0","name":"Sticky Note1"},{"parameters":{"content":"## Resources\n\n- https://docs.n8n.io/integrations/builtin/credentials/postgres/\n- https://docs.n8n.io/credentials/add-edit-credentials/\n- Un peu de sql: https://neon.com/postgresql/postgresql-tutorial/postgresql-primary-key","width":1480,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-200,220],"id":"9c76babd-5c57-40a9-80bf-e28ae88120ad","name":"Sticky Note2"},{"parameters":{"workflowInputs":{"values":[{"name":"asset_ticker"},{"name":"asset_type"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-140,700],"id":"fd77a126-ee04-4b78-9014-524c7711d24c","name":"When Executed by Another Workflow"},{"parameters":{"operation":"executeQuery","query":"-- Create the table only if it does not already exist\nCREATE TABLE IF NOT EXISTS daily_time_series (\n    date         DATE        NOT NULL,\n    asset_ticker VARCHAR(12) NOT NULL,\n    asset_type   VARCHAR(20) NOT NULL,\n    open         DOUBLE PRECISION,\n    high         DOUBLE PRECISION,\n    low          DOUBLE PRECISION,\n    close        DOUBLE PRECISION,\n    volume       DOUBLE PRECISION,\n    -- Unicity guarantee\n    CONSTRAINT daily_time_series_pkey PRIMARY KEY (date, asset_ticker)\n);\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[680,780],"id":"9f0eea4f-d997-45f0-a9fe-8783ee8d8492","name":"Execute a SQL query","alwaysOutputData":true,"credentials":{"postgres":{"id":"W77b4Er3UQMiLfKC","name":"PostgresAccount"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"ff9b951e-3d26-49b1-89fc-e059e4243a9c","leftValue":"={{ $json.table_exists }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[360,700],"id":"a3ff5c39-d790-4972-a657-947fe3c53817","name":"If"},{"parameters":{"operation":"executeQuery","query":"SELECT EXISTS (\n    SELECT FROM information_schema.tables\n    WHERE  table_schema = 'public'      -- change if you use another schema\n       AND table_name   = 'daily_time_series'  -- ← name of the table to test\n)  AS table_exists;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[120,700],"id":"174fec3e-6dee-4009-84cd-70f453f7166c","name":"DoesTableExist","credentials":{"postgres":{"id":"W77b4Er3UQMiLfKC","name":"PostgresAccount"}}},{"parameters":{"content":"Check if table daily_time_series exist","height":300},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[60,620],"id":"9cb1834e-35ed-44db-85fd-cb563f107c50","name":"Sticky Note3"},{"parameters":{"content":"if","height":300},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[320,620],"id":"ef681934-1bc0-4a09-8c5c-d597e6da13a0","name":"Sticky Note4"},{"parameters":{"content":"Create or not\n- Utiliser data & ticker pour la pkey","height":300,"width":400},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[580,620],"id":"3d38d969-fb70-4c0d-b448-4a0b64c42526","name":"Sticky Note5"},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"daily_time_series","mode":"list","cachedResultName":"daily_time_series"},"columns":{"mappingMode":"defineBelow","value":{"date":"={{ $json.formattedDate }}","asset_ticker":"={{ $('When Executed by Another Workflow').item.json.asset_ticker }}","asset_type":"={{ $('When Executed by Another Workflow').item.json.asset_type }}","open":"={{ $('Extract from File').item.json.open }}","high":"={{ $('Extract from File').item.json.high }}","low":"={{ $('Extract from File').item.json.low }}","close":"={{ $('Extract from File').item.json.close }}","volume":"={{ $('Extract from File').item.json.volume }}"},"matchingColumns":["date","asset_ticker"],"schema":[{"id":"date","displayName":"date","required":true,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true,"removed":false},{"id":"asset_ticker","displayName":"asset_ticker","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"asset_type","displayName":"asset_type","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false},{"id":"open","displayName":"open","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":false},{"id":"high","displayName":"high","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":false},{"id":"low","displayName":"low","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":false},{"id":"close","displayName":"close","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":false},{"id":"volume","displayName":"volume","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1640,680],"id":"3689feb4-7bcb-4431-ad51-f70f96b8d2c0","name":"Insert or update rows in a table","credentials":{"postgres":{"id":"W77b4Er3UQMiLfKC","name":"PostgresAccount"}}},{"parameters":{"fileSelector":"=/home/node/files/exercices/daily_series_flat/{{ $('When Executed by Another Workflow').item.json.asset_type }}_{{ $('When Executed by Another Workflow').item.json.asset_ticker }}.csv","options":{}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[1040,720],"id":"46bcc647-977a-45c0-9961-6ab9d36e7c69","name":"Read/Write Files from Disk"},{"parameters":{"options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[1240,720],"id":"3e3ac36b-d164-43df-821c-fb4dcd87241c","name":"Extract from File"},{"parameters":{"operation":"formatDate","date":"={{ $json['﻿date'] }}","format":"yyyy-MM-dd","options":{}},"type":"n8n-nodes-base.dateTime","typeVersion":2,"position":[1440,680],"id":"94183475-b011-4b2a-a197-946ff02ddbdf","name":"Date & Time"},{"parameters":{"content":"Import and convert csv","height":300,"width":380},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1000,620],"id":"ce115da7-09dd-4941-ac8d-2b10b23861a8","name":"Sticky Note6"},{"parameters":{"content":"Add rows","height":300,"width":420},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1400,620],"id":"6bc37ecb-fa1e-41e2-a6e2-60f8faa763ef","name":"Sticky Note7"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"DoesTableExist","type":"main","index":0}]]},"Execute a SQL query":{"main":[[{"node":"Read/Write Files from Disk","type":"main","index":0}]]},"DoesTableExist":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"Read/Write Files from Disk","type":"main","index":0}],[{"node":"Execute a SQL query","type":"main","index":0}]]},"Insert or update rows in a table":{"main":[[]]},"Read/Write Files from Disk":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Date & Time","type":"main","index":0}]]},"Date & Time":{"main":[[{"node":"Insert or update rows in a table","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"asset_ticker":"BTC","asset_type":"digital_currency"}}]},"versionId":"89263286-4ae9-4efb-b0be-1bfeed48fcce","triggerCount":0,"tags":[]}